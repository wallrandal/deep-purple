{"version":3,"sources":["Sectors.js","Description.js","App.js","serviceWorker.js","index.js"],"names":["Sectors","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","maskMoney","value","parseFloat","toLocaleString","style","currency","minimumFractionDigits","responsive","0","items","600","1024","i","bind","assertThisInitialized","submit","inherits","createClass","key","alert","_this2","state","currentIndex","galleryItems","sectors","map","sector","react_default","a","createElement","className","name","htmlFor","type","defaultValue","min","react_alice_carousel_default","buttonsDisabled","fadeOutAnimation","mouseDragEnabled","disableAutoPlayOnAction","infinite","onClick","Component","Description","handleClick","document","getElementById","scrollIntoView","behavior","local","date","time","id","Sectors_Sectors","App","fetch","then","response","json","data","setState","logo","main_picture","band_name","catch","error","isLoading","fetchData","_this$state","src","Description_Description","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7cdecbf7.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport AliceCarousel from 'react-alice-carousel'\nimport 'react-alice-carousel/lib/alice-carousel.css'\nimport './Sectors.scss';\n\nexport class Sectors extends Component {\n  constructor(props) {\n    super(props);\n    this.i = [];\n    this.maskMoney = this.maskMoney.bind(this);\n    this.submit = this.submit.bind(this);\n  }\n\n  maskMoney = (value) => {\n    return parseFloat(value).toLocaleString('pt-BR', { style: 'currency', currency: 'BRL',  minimumFractionDigits: 2})\n  }\n\n  submit() {\n    alert('Compra Finalizada!')\n  }\n\n  render() {\n  \tconst state = {\n      currentIndex: 0,\n\t     galleryItems: this.props.sectors.map((sector) => (\n\t\t<div className=\"Sector\">\n\t\t\t<div>Tipo: {sector.name}</div>\n      <div className=\"Sector__quantity\">\n        <label  htmlFor=\"quantity\">Qtde:</label>\n          <div className=\"Sector__quantity__input\"><input type=\"number\" defaultValue=\"0\" min=\"0\"name=\"quantity[]\" /></div>\n      </div>\n\t\t\t<div>Valor Unitário: {this.maskMoney(sector.value)}</div>\n\t\t</div>\n\t\t)),\n\t}\n    return (\n      \t <div>\n           <AliceCarousel\n            items={state.galleryItems}\n            responsive={this.responsive}\n            buttonsDisabled={true}\n            fadeOutAnimation={true}\n            mouseDragEnabled={true}\n            disableAutoPlayOnAction={true}\n            infinite={false}\n          />\n          <div className=\"Sector__submit\">\n            <button onClick={this.submit} className=\"Sector__submit__button\">Finalizar Compra</button>\n          </div>\n          <div className=\"Sector__footer\">\n            Feito com ❤ por Wallace Randal\n          </div>\n         </div>\n    );\n  }\n\n  responsive = {\n    0: { items: 1 },\n    600: { items: 2 },\n    1024: { items: 3 },\n  }\n\n}\n","import React, { Component } from 'react';\nimport './Description.scss';\nimport { Sectors} from './Sectors';\nexport class Description extends Component {\n\tconstructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    document.getElementById('sectors').scrollIntoView({ \n\t\t  behavior: 'smooth' \n\t\t});\n  }\n\n  render() {\n    return (\n      <div className=\"Description\">\n        <a onClick={this.handleClick} >\n      \t <button className=\"Description__button\">\n      \t   \tCompre Agora!\n      \t   </button>\n        </a>\n      \t<div className=\"Description__local\">\n      \t\t<div className=\"Description__local_name\">{this.props.local}</div>\n      \t\t<div className=\"Description__local_date\">{this.props.date}</div>\n      \t\t<div className=\"Description__local_time\">{this.props.time}</div>\n      \t</div>\n\n      \t<div className=\"Description__sectors\" id=\"sectors\">\n          <div className=\"Description__sectors__title\">Escolha a Melhor Opção!</div>\n           <Sectors sectors={this.props.sectors} />\n      \t</div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { Description } from './Description';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      sectors: []\n    }\n  }\n\n  fetchData() {\n    fetch(`./Band1.json`)\n      .then(response => response.json())\n      .then(data =>\n        this.setState({\n          logo: data.logo,\n          main_picture: data.main_picture,\n          band_name: data.band_name,\n          local: data.local,\n          date: data.date,\n          time: data.time,\n          sectors: data.sectors\n        })\n      )\n      .catch(error => this.setState({ error, isLoading: false }));\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  render() {\n    const {logo, main_picture, band_name, local, date, time, sectors} = this.state;\n    return (\n      <div className=\"App\"> \n        <div className=\"App__background\" >\n          <div className=\"App__background__content\" >\n            <div className=\"App__background__content__title\">\n                <img src={logo} />\n            </div>\n            <div className=\"App__background__content__header\" >\n              <img src={main_picture} />\n            </div>\n            <Description local={local} date={date} time={time} sectors={sectors} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}